"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([["3424"],{8195:function(e,i,r){r.r(i),r.d(i,{default:()=>d,frontMatter:()=>o,metadata:()=>s,assets:()=>l,toc:()=>c,contentTitle:()=>a});var s=JSON.parse('{"id":"comp-2540/overview","title":"COMP 2540 - Overview","description":"Course Title","source":"@site/courses/comp-2540/overview.md","sourceDirName":"comp-2540","slug":"/comp-2540/overview","permalink":"/wiki/courses/comp-2540/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/UWindsorCSS/Wiki/tree/master/courses/comp-2540/overview.md","tags":[],"version":"current","frontMatter":{"id":"overview","title":"COMP 2540 - Overview","sidebar_label":"COMP-2540","slug":"/comp-2540/overview"},"sidebar":"indexNav","previous":{"title":"Surviving COMP-2310","permalink":"/wiki/courses/comp-2310/surviving-comp-2310"},"next":{"title":"COMP-2547","permalink":"/wiki/courses/comp-2547/overview"}}'),t=r("6773"),n=r("4434");let o={id:"overview",title:"COMP 2540 - Overview",sidebar_label:"COMP-2540",slug:"/comp-2540/overview"},a=void 0,l={},c=[{value:"Course Title",id:"course-title",level:2},{value:"Course Description",id:"course-description",level:2},{value:"Typical Course Offering",id:"typical-course-offering",level:2},{value:"Is a Textbook Required?",id:"is-a-textbook-required",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Syllabus",id:"syllabus",level:2}];function u(e){let i={a:"a",h2:"h2",li:"li",p:"p",ul:"ul",...(0,n.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"course-title",children:"Course Title"}),"\n",(0,t.jsx)(i.p,{children:'The title for COMP-2540 is "Data Structures and Algorithms".'}),"\n",(0,t.jsx)(i.h2,{id:"course-description",children:"Course Description"}),"\n",(0,t.jsx)(i.p,{children:"An introduction to the programming and analysis of linear and non-linear internal (main store) data structures and associated algorithms . Topics include the formal notion of an algorithm, elementary time and space complexity; linear lists (such as stacks, queues, linked structures.); non-linear lists (trees, binary trees); recursion; sorting techniques (such as heap sort, quick sort, merge sort, shell sort.); searching techniques (such as binary search, binary search trees, red-black trees, hashing.); algorithm design paradigms (such as divide-and-conquer, dynamic programming, greedy algorithms); and applications. (Prerequisite: COMP-1000 and COMP-1410.) (3 lecture hours and 1.5 laboratory hours a week.)"}),"\n",(0,t.jsx)(i.h2,{id:"typical-course-offering",children:"Typical Course Offering"}),"\n",(0,t.jsx)(i.p,{children:"COMP-2540 is typically offered in all semesters."}),"\n",(0,t.jsx)(i.h2,{id:"is-a-textbook-required",children:"Is a Textbook Required?"}),"\n",(0,t.jsx)(i.p,{children:"No, while there is a textbook listed and you may find it helpful, it is not required to succeed in this course."}),"\n",(0,t.jsx)(i.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(i.p,{children:"COMP-1000 and COMP-1410 are the prerequisites for this class."}),"\n",(0,t.jsx)(i.h2,{id:"syllabus",children:"Syllabus"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(7780).Z+"",children:"Fall 2024"})}),"\n"]})]})}function d(e={}){let{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},7780:function(e,i,r){r.d(i,{Z:function(){return s}});let s=r.p+"assets/files/COMP-2540-01-02 F24-2e87c0ae732e83f390eb55f9c07a5c2b.pdf"},4434:function(e,i,r){r.d(i,{Z:function(){return a},a:function(){return o}});var s=r(1699);let t={},n=s.createContext(t);function o(e){let i=s.useContext(n);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(n.Provider,{value:i},e.children)}}}]);